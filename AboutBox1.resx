<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADQAAAA0CAYAAADFeBvrAAAABGdBTUEAALGPC/xhBQAABHlJREFUaEPt
        WslqFFEUjQOOq6CIShyIihBwINkZxew0S5XMg41KxAniSnBKhOyMwy84LxViNH+gYDS7qJi4EYxRjGPE
        GIOeWznVvH65r1NdXd0pwQOH13WHc+97XcOrpgtcqKurW9rQ0HAdHAb/xITD9fX115qbm5ewzeBA8i1L
        LE68wTaDA0mfLJE4cYRtBociEiuyzeDQROJEthkcmkicyDaDQxMxOAH2yx0H4zGwvLGxsRTHxRhXYCyk
        jBMSw1jJKRUN0aJmPyg1tNoeKRMcmgj4GjxfW1u7lmE5g9SQWqw5pReGBYclMIaVO1VRUTGXbh+z4CvB
        Ch/C2AneQ9wTjL2wDWAcBEcsDtLXK7HgXXzuxHgQY4loTkpPQmpKbfjGwEgmNA7BvTR7wPEG8Cp8b424
        qDgEXqmpqVnHch6kB9jH/Tiag8NPBDto8oDVbYctZbVyxDHUOseyHmDr8P00BYefiHN5FU2ySm2+PY88
        w/IF2PKs9u00hUdVVdU8CH30BQ1+Absw2bMY67Gq2/C5DONGjMWy78JYKJT9odjoK0N8OcYG+Sbw+T74
        FbT1P0htthEdUHSHVWgYturKysr5DMkaiURiASZYC933Zi0sxHaGZA4ItIKj4HfwBM0yocMi7hPHN+mK
        HNBP2Rhjki10OftzgoG+2DeaZUKXDbtMKOWCjRLQl+dPshYmdIkuZ39OGMEeaRb7A9OOIlV0RQ4sVrVZ
        C8fddDn7c8KVgM/2E3sTXZED18xmq9YgXdFMqKWlZRE+m3ur31HeDGzIzUFqGPUmcKdbKD7D5tFLSAct
        AafXVtOGU2DAC84hUEe2TWbNLbQnbUIvOB0QNOWik1upYRN2ecE5BGrIc8msWUN7xjcFeR3wbouYyBGx
        YXVku5MUx/FFLziHQB3Z7CZropc22qf0lzEwgTu+8AzyNtvJHhDrs8TzTizqM7aTHdrb22dD8IddYAY4
        Kr2wrfDgm6NWIO/ENbOGbYUHvurdmrjCHsSuZ1pgcMEeWloqMaFdTAsPiJzUxBUWMSVjyDuXoqexlSmZ
        QZ7KmIi837zAmHztTUemhoamaZO9PMeZcFp2E0xNj6ampsVIemwKBSHTQ0PTnIaPZEvGdDcQeMFKDESm
        h4amOR3xjXkP27RA4Cs7MQiZHhqKprza9+H0eoNxAs3/BFN+nMHxS6a7gcCUawZJCXNnjetrDuz7zRgh
        3aFh6X3Gqb+MriTkVdyK+0WXG1aCNJryw59AfvxT4rKCpfeUZhvyw6YZN31dO0G+EbpMTBHGrXclfRkD
        +UWWXh9dKQi1kHYCeNTccnArdMCKkb1WN26lyxkWGPytrcfUkusFp9dOhniQuqhx3IwT0u2GnRB3sm03
        tKQ4k227oSXFmWzbDS0pzmTb//HvQvta40y27YaWFGeybTe0pDiTbbuhJcWZbNsNLSnOZNtuaElxJtt2
        Q0syybC8QevBJMPc0JJMMixv0HowyTA3EPTOTjI4xLC8ATWz6wfvHPsk0EoUyr9G9jAsb8isn4KCv/RG
        pEDHy5hMAAAAAElFTkSuQmCC
</value>
  </data>
</root>